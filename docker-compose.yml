
version: '3.8'
# this will create a service called 'api' from the dockerfile
services:

  api:
    build:
      context: .
      dockerfile: dockerfile
    entrypoint: ['/usr/src/app/entrypoint.sh']
    volumes:
    # 'volume' is used to mount the code into the container, allowing for changes made to source code to affect the container dynamically.
      - .:/usr/src/app
    ports:
      - 5004:5000
    environment:
      - FLASK_APP=src/__init__.py
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@api-db:5432/api_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@api-db:5432/api_test
    depends_on:
      - api-db

  api-db:
    build:
      context: ./src/db
      dockerfile: dockerfile
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres